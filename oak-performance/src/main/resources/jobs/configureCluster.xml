<joblist>
  <job>
    <id>6ba672fc-8d95-4c06-826a-5a42263148e8</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='false' strategy='step-first'>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash 

# Removes everything from the working directory
# Downloads java and set the java environment variables
# Downloads maven and set the maven environment variables
# Clones the rogoz/jackrabbit-oak repository
# Builds jackrabit oak
# The step is executed concurrently on all mongos platforms

# Define shards 
MONGOS_MAIN_PLATFORM=localhost 
SHARD1_HOST=ec2-50-112-15-19.us-west-2.compute.amazonaws.com
SHARD2_HOST=ec2-54-244-69-122.us-west-2.compute.amazonaws.com 
SHARD3_HOST=ec2-50-112-30-14.us-west-2.compute.amazonaws.com 
CONFIG_PORT=20001 
MONGOS_PORT=30000 
MONGOD_PORT=27018 
DATABASE_NAME=mongoTestStorage 
 
 
# Clean the user's home folder 
rm -rf *; 
 
# Download and set Java 
wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2Ftechnetwork%2Fjava%2Fjavase%2Fdownloads%2Fjdk6-downloads-1637591.html;" http://download.oracle.com/otn-pub/java/jdk/6u33-b03/jdk-6u33-linux-x64.bin  
chmod a+x jdk-6u33-linux-x64.bin  
yes | ./jdk-6u33-linux-x64.bin  
export JAVA_HOME=/home/${USER}/jdk1.6.0_33/  
export PATH=${JAVA_HOME}bin:$PATH  
 
 
# Download and set Maven 
wget http://mirrors.hostingromania.ro/apache.org/maven/maven-3/3.0.5/binaries/apache-maven-3.0.5-bin.tar.gz 
mkdir maven 
tar -xvf apache-maven-3.0.5-bin.tar.gz --strip 1 --directory maven 
export M2=/home/${USER}/maven/bin 
export MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=128m" 
export PATH=$PATH:$M2 
 
# Clone the repository 
echo Clone oak repository 
git clone https://github.com/rogoz/jackrabbit-oak.git 
 
# Build OAK 
mvn -f /home/${USER}/jackrabbit-oak/pom.xml clean install -DskipTests]]></script>
      </command>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash 

# Starts the mongos servers
# The step is executed concurrently on all mongos platforms
 
# Define shards 
MONGOS_MAIN_PLATFORM= 
SHARD1_HOST=ec2-50-112-15-19.us-west-2.compute.amazonaws.com
SHARD2_HOST=ec2-54-244-69-122.us-west-2.compute.amazonaws.com 
SHARD3_HOST=ec2-50-112-30-14.us-west-2.compute.amazonaws.com 
CONFIG_PORT=20001 
MONGOS_PORT=30000 
MONGOD_PORT=27018 
DATABASE_NAME=mongoTestStorage 
 
mkdir mongos 
killall -v mongos
 
echo "Start Mongos server" 
mongos --port $MONGOS_PORT --configdb "$SHARD1_HOST":"$CONFIG_PORT","$SHARD2_HOST":"$CONFIG_PORT","$SHARD3_HOST":"$CONFIG_PORT" --fork --logpath mongos/mongos.log]]></script>
      </command>
      <command>
        <scriptargs />
        <script><![CDATA[#!/bin/bash 

# Drops the $DATABASE_NAME on each shard
# Adds each shard to the cluster
# Creates the NODES, segments, blobs, syncOAK collections
# Enable sharding for the $DATABASE_NAME
# Sets sharding keys for NODES, segments, syncOAK collections
# The step is executed ONLY on the MONGOS_MAIN_PLATFORM

# Define shards 
SHARD1_HOST=ec2-50-112-15-19.us-west-2.compute.amazonaws.com
SHARD2_HOST=ec2-54-244-69-122.us-west-2.compute.amazonaws.com 
SHARD3_HOST=ec2-50-112-30-14.us-west-2.compute.amazonaws.com 
CONFIG_PORT=20001 
MONGOS_PORT=30000 
MONGOD_PORT=27018 
CURRENT_NODE=@node.hostname@ 
MONGOS_MAIN_PLATFORM=@option.MONGOS_MAIN_PLATFORM@ 
DATABASE_NAME=mongoTestStorage 

 
if [ "$CURRENT_NODE" == "$MONGOS_MAIN_PLATFORM" ]; then 
  echo "Drop database on each shard" 
  mongo --host $SHARD1_HOST $DATABASE_NAME --port $MONGOD_PORT --eval "db.dropDatabase()" 
  mongo --host $SHARD2_HOST $DATABASE_NAME --port $MONGOD_PORT --eval "db.dropDatabase()" 
  mongo --host $SHARD3_HOST $DATABASE_NAME --port $MONGOD_PORT --eval "db.dropDatabase()" 
  echo "Link shards" 
  mongo --host $MONGOS_MAIN_PLATFORM admin --port $MONGOS_PORT  --eval "sh.addShard(\"$SHARD1_HOST:$MONGOD_PORT\")" 
  mongo --host $MONGOS_MAIN_PLATFORM admin --port $MONGOS_PORT  --eval "sh.addShard(\"$SHARD2_HOST:$MONGOD_PORT\")" 
  mongo --host $MONGOS_MAIN_PLATFORM admin --port $MONGOS_PORT  --eval "sh.addShard(\"$SHARD3_HOST:$MONGOD_PORT\")" 
  echo "Create collections" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "db.createCollection(\"NODES\")" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "db.createCollection(\"blobs\")" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "db.createCollection(\"segments\")" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "db.createCollection(\"syncOAK\")" 
  echo "Enable sharding" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "sh.enableSharding(\"$DATABASE_NAME\")" 
  echo "Set sharding key" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "sh.shardCollection(\"$DATABASE_NAME.NODES\", { \"_id\": 1 }, true)" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "sh.shardCollection(\"$DATABASE_NAME.segments\", { \"_id\": 1 }, true)" 
  mongo --host $MONGOS_MAIN_PLATFORM $DATABASE_NAME --port $MONGOS_PORT --eval "sh.shardCollection(\"$DATABASE_NAME.syncOAK\", { \"_id\": 1 }, true)" 
fi]]></script>
      </command>
    </sequence>
    <description>Connect to the mongos stations.</description>
    <name>configureCluster</name>
    <context>
      <project>oakPerformance</project>
      <options>
        <option required='true' name='MONGOS_MAIN_PLATFORM' value='ec2-50-112-90-76.us-west-2.compute.amazonaws.com'>
          <description>The mongos platform from where we configure the cluster shards.</description>
        </option>
        <option required='true' name='MongosNumber' value='3'>
          <description>Number of Concurrent Oaks</description>
        </option>
      </options>
    </context>
    <dispatch>
      <threadcount>20</threadcount>
      <keepgoing>false</keepgoing>
      <excludePrecedence>true</excludePrecedence>
      <rankOrder>ascending</rankOrder>
    </dispatch>
    <uuid>6ba672fc-8d95-4c06-826a-5a42263148e8</uuid>
    <nodefilters>
      <include>
        <tags>mongodb-10gen</tags>
      </include>
      <exclude>
        <name>i-c01866f2</name>
      </exclude>
    </nodefilters>
  </job>
</joblist>